print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
# colname <- paste0(string, colnames(data)[i])
g <- ggplot(data, aes(x=data$age)) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$age), color="darkgray", size=3) +
xlab("age")
dir <- paste0("Health_Advisor/data/graph/g_", "age", ".rds")
saveRDS(g, file=dir)
print(paste("age", "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- paste0(string, colnames(data)[i])
print(colname)
# g <- ggplot(data, aes(x=data$colname)) +
#   geom_histogram(fill="red", alpha = 0.2) +
#   geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
#   xlab(colname)
#
# dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
# saveRDS(g, file=dir)
# print(paste(colname, "Saved"))
#
# g2 <- readRDS(dir)
# print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- paste0(string, colnames(data)[i])
print(class(colname))
# g <- ggplot(data, aes(x=data$colname)) +
#   geom_histogram(fill="red", alpha = 0.2) +
#   geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
#   xlab(colname)
#
# dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
# saveRDS(g, file=dir)
# print(paste(colname, "Saved"))
#
# g2 <- readRDS(dir)
# print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- paste0(string, colnames(data)[i])
# print(class(colname))
g <- ggplot(data, aes(x=data[, c(colname)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
canc_data_vis[, c("age")]
name <- "age"
canc_data_vis[, c(name)]
class("age")
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- paste0(string, colnames(data)[i])
print(class(colname))
g <- ggplot(data, aes(x=data[, c(colname)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- colnames(data)[i]
print(class(colname))
g <- ggplot(data, aes(x=data[, c(colname)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- colnames(data)[i]
print(colname)
g <- ggplot(data, aes(x=data[, c(colname)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
colname = "age"
data[, c(colname)]
canc_data_vis[, c(colname)]
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- colnames(data)[i]
print(colname)
g <- ggplot(data, aes(x=data$data)) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vi
s)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- colnames(data)[i]
print(colname)
g <- ggplot(data, aes(x=data$data)) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- colnames(data)[i]
print(colname)
g <- ggplot(data, aes(x=data$age)) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- as.character(colnames(data)[i])
print(colname)
g <- ggplot(data, aes(x=data[, colname]])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- as.character(colnames(data)[i])
print(colname)
g <- ggplot(data, aes(x=data[, colname])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- as.character(colnames(data)[i])
print(colnames(data))
g <- ggplot(data, aes(x=data[, colname])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- as.character(colnames(data)[i])
print(colnames(data))
g <- ggplot(data, aes(x=data[, c(colname)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
subset(canc_data_vis, select=c('age'))
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- as.character(colnames(data)[i])
print(colnames(data))
g <- ggplot(data, aes(x=subset(canc_data_vis, select=c(colname)))) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- names(data)[i]
print(colnames(data))
g <- ggplot(data, aes(x=subset(data, select=c(colname)))) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- names(data)[i]
print(colname)
g <- ggplot(data, aes(x=subset(data, select=c(colname)))) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- names(data)[i]
print(colname)
g <- ggplot(data, aes(x = data[, c(3)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data$colname), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
colname <- names(data)[i]
g <- ggplot(data, aes(x = data[, c(i)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data[, c(i)]), color="darkgray", size=3) +
xlab(colname)
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
g2 <- readRDS(dir)
print(g2)
}
}
graph_generator("canc_", canc_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, 4)) {
# extract name
colname <- names(data)[i]
# create plot
g <- ggplot(data, aes(x = data[, c(i)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data[, c(i)]), color="darkgray", size=3) +
xlab(colname)
# save data
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
}
}
graph_generator("canc_", canc_data_vis)
graph_generator("heart_", heart_data_vis)
graph_generator <- function(string, data) {
for (i in seq(3, ncol(data))) {
# extract name
colname <- names(data)[i]
# create plot
g <- ggplot(data, aes(x = data[, c(i)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data[, c(i)]), color="darkgray", size=3) +
xlab(colname)
# save data
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
}
}
graph_generator("canc_", canc_data_vis)
graph_generator("heart_", heart_data_vis)
runApp()
setwd("~/Documents/archHack/Health_Advisor")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
graph_generator <- function(string, data) {
for (i in seq(3, ncol(data))) {
# extract name
colname <- names(data)[i]
# create plot
g <- ggplot(data, aes(x = data[, c(i)])) +
geom_histogram(fill="red", alpha = 0.2) +
geom_vline(xintercept = mean(data[, c(i)]), color="darkgray", size=3) +
xlab(colname)
# save data
colname <- paste0(string, colnames(data)[i])
dir <- paste0("Health_Advisor/data/graph/g_", colname, ".rds")
saveRDS(g, file=dir)
print(paste(colname, "Saved"))
}
}
graph_generator("canc_", canc_data_vis)
graph_generator("heart_", heart_data_vis)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
hist(as.numeric(rsn(size, 32, 4.3, 10)))
hist(as.numeric(rsn(size, 32, 10, 10)))
hist(as.numeric(rsn(size, 35, 13, 10)))
runApp()
install.packages("plotly")
install.packages("plotly")
runApp()
runApp()
install.packages("plotly")
setwd("~/Documents/archHack/Health_Advisor")
runApp()
library(shiny)
runApp()
runApp()
})
runApp()
shinyApp(ui, server)
print(source('~/Documents/ploty_test.R')$value)
runApp()
runApp()
print(source('~/Documents/ploty_test.R')$value)
runApp()
runApp()
runApp()
runApp()
runApp()
?renderPlot
?ggplot
?geom_density
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
hist(as.numeric(rsn(size, 40, 15, 80)))
library(sn)
hist(as.numeric(rsn(size, 40, 15, 80)))
hist(as.numeric(rsn(size, 40, 15, 60)))
hist(as.numeric(rsn(size, 40, 15, 100)))
hist(as.numeric(rsn(size, 40, 15, -100)))
hist(as.numeric(rsn(size, 40, 15, 0)))
hist(as.numeric(rsn(size, 40, 15, 20)))
hist(as.numeric(rsn(size, 40, 15, 10)))
hist(as.numeric(rsn(size, 40, 15, 1)))
hist(as.numeric(rsn(size, 40, 15, 3)))
hist(as.numeric(rsn(size, 40, 15, 5)))
hist(as.numeric(rsn(size, 40, 15, 4)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
str(canc_data_vis)
runApp()
runApp()
